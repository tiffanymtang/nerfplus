% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importance.R
\name{get_feature_importances}
\alias{get_feature_importances}
\title{Compute feature importances for a NeRF+ model}
\usage{
get_feature_importances(
  object,
  x,
  x_embed = NULL,
  y = NULL,
  A_full,
  nodeids = NULL,
  method = c("permute", "mdi+", "local"),
  B = 10,
  metric = NULL
)
}
\arguments{
\item{object}{A fitted NeRF+ model object.}

\item{x}{A data frame or matrix used to compute the feature importances.}

\item{x_embed}{An optional data frame or matrix of network embeddings
corresponding to the samples in \code{x}. Only needed if training embeddings
were manually inputted.}

\item{y}{A vector of responses.}

\item{A_full}{An adjacency matrix representing the network structure for
the full set of nodes (training + testing nodes in that order)}

\item{nodeids}{(Optional) vector of node IDs of length n.
If provided, node IDs indicate the rows of A, corresponding to each
sample. If not provided, the rows of A are assumed to be in the same order
as the rows of x and y.}

\item{method}{A character string indicating the method to use for computing
feature importances. Options are:
\itemize{
\item \code{"permute"}: Permutation-based global feature importance.
\item \code{"mdi+"}: MDI+ global feature importance.
\item \code{"local"}: Local feature importance.
}}

\item{B}{Number of samples for permutation-based feature
importance. Ignored if \code{method} is not \code{"permute"}.}

\item{metric}{A function to compute the metric used for global feature
importances. Defaults to R-squared for regression and AUROC for
classification. Ignored if \code{method} is \code{"local"}.}
}
\value{
If \code{method} is \code{"permute"} or \code{"mdi+"}, a tibble with two columns:
\itemize{
\item \code{var}: The name of the feature.
\item \code{importance}: The computed feature importance score.
If \code{method} is \code{"local"}, an n x p
}
}
\description{
This function computes global and local feature importances
given a fitted NeRF+ model.
}
\examples{
\donttest{
data(example_data)
nerfplus_out <- nerfplus(
  x = example_data$x, y = example_data$y, A = example_data$A,
  lambda_netcoh = 1,
  lambda_embed = 0.1,
  lambda_raw = 2,
  lambda_stump = 3,
  family = "linear", embedding = "laplacian", sample_split = "none"
)
fi_out <- get_feature_importances(
  nerfplus_out, x = example_data$xtest, y = example_data$ytest,
  A_full = example_data$A_full, method = "mdi+"
)
}

}
